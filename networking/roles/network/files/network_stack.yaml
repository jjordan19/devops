AWSTemplateFormatVersion: "2010-09-09"
Description: A template to create a network stack.
Parameters:
  SSHKeyName:
    Type: "AWS::EC2::KeyPair::KeyName"
Resources:
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/24
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
      - Key: Name
        Value: MY-VPC-v1
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.0.0/27
      AvailabilityZone: "us-east-1a"
      Tags:
      - Key: Name
        Value: MY-PublicSubnet1-v1 
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.0.32/27
      AvailabilityZone: "us-east-1b"
      Tags:
      - Key: Name
        Value: MY-PublicSubnet2-v1 
  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.0.64/27
      AvailabilityZone: "us-east-1c"
      Tags:
      - Key: Name
        Value: MY-PublicSubnet3-v1 
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.0.96/27
      AvailabilityZone: "us-east-1a"
      Tags:
      - Key: Name
        Value: MY-PrivateSubnet1-v1 
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.0.128/27
      AvailabilityZone: "us-east-1b"
      Tags:
      - Key: Name
        Value: MY-PrivateSubnet2-v1    
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.0.160/27
      AvailabilityZone: "us-east-1c"
      Tags:
      - Key: Name
        Value: MY-PrivateSubnet3-v1    
  myPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: myVPC
      Tags:
      - Key: Name
        Value: MY-PublicRT-v1
  myPrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: myVPC
      Tags:
      - Key: Name
        Value: MY-PrivateRT1-v1
  myPrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: myVPC
      Tags:
      - Key: Name
        Value: MY-PrivateRT2-v1
  myPrivateRouteTable3:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: myVPC
      Tags:
      - Key: Name
        Value: MY-PrivateRT3-v1
  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: MY-IGW-v1
  myAttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref myVPC
      InternetGatewayId: !Ref myInternetGateway
  myIGWRoute:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId:
         Ref: myPublicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: myInternetGateway
  myPubRTBLocalRoute:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId:
         Ref: myPublicRouteTable
       DestinationCidrBlock: 10.0.0.0/24
       GatewayId: 'local'
  myPriRTBLocalRoute1:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId:
         Ref: myPrivateRouteTable1
       DestinationCidrBlock: 10.0.0.0/24
       GatewayId: 'local'
  myPriRTBLocalRoute2:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId:
         Ref: myPrivateRouteTable2
       DestinationCidrBlock: 10.0.0.0/24
       GatewayId: 'local'
  myPriRTBLocalRoute3:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId:
         Ref: myPrivateRouteTable3
       DestinationCidrBlock: 10.0.0.0/24
       GatewayId: 'local'
  myPublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      RouteTableId:
        Ref: myPublicRouteTable
  myPublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      RouteTableId:
        Ref: myPublicRouteTable
  myPublicSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet3
      RouteTableId:
        Ref: myPublicRouteTable
  myPrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet1
      RouteTableId:
        Ref: myPrivateRouteTable1
  myPrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet2
      RouteTableId:
        Ref: myPrivateRouteTable2
  myPrivateSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet3
      RouteTableId:
        Ref: myPrivateRouteTable3
